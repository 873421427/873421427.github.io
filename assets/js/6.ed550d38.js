(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{191:function(a,o,t){"use strict";t.r(o);var e=t(0),r=Object(e.a)({},function(){var a=this,o=a.$createElement,t=a._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"go-终于可以不翻墙下载golang-org-包了"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go-终于可以不翻墙下载golang-org-包了","aria-hidden":"true"}},[a._v("#")]),a._v(" Go 终于可以不翻墙下载golang.org 包了")]),a._v(" "),t("h2",{attrs:{id:"golang-包下载一直存在的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#golang-包下载一直存在的问题","aria-hidden":"true"}},[a._v("#")]),a._v(" golang 包下载一直存在的问题")]),a._v(" "),t("p",[a._v("相信困扰大部分刚入门go语言新手的问题就是想下载golang.org 包，却因为google被强了，导致golang也被墙了。 而网上也给出了一些解决的方法，其中包括")]),a._v(" "),t("h3",{attrs:{id:"_1-手动将golang的包在github上clone-下来，再自己安装，这个方法很蠢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-手动将golang的包在github上clone-下来，再自己安装，这个方法很蠢","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.手动将golang的包在github上clone 下来，再自己安装，这个方法很蠢")]),a._v(" "),t("h3",{attrs:{id:"_2-用gopm，通过在国内的cdn分发来下载golang包，但是就无法使用-go-get-…-这么强大的直接下载项目依赖的命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-用gopm，通过在国内的cdn分发来下载golang包，但是就无法使用-go-get-…-这么强大的直接下载项目依赖的命令","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 用gopm，通过在国内的CDN分发来下载golang包，但是就无法使用 go get ./… 这么强大的直接下载项目依赖的命令")]),a._v(" "),t("h3",{attrs:{id:"_3-终极大杀器，我接下要介绍的，就是在go1-11中推出的官方自带包管理工具中的一个特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-终极大杀器，我接下要介绍的，就是在go1-11中推出的官方自带包管理工具中的一个特性","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 终极大杀器，我接下要介绍的，就是在GO1.11中推出的官方自带包管理工具中的一个特性")]),a._v(" "),t("h3",{attrs:{id:"goproxy-环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#goproxy-环境变量","aria-hidden":"true"}},[a._v("#")]),a._v(" GOPROXY 环境变量")]),a._v(" "),t("p",[a._v("终于到了本文的终极大杀器 —— "),t("strong",[a._v("GOPROXY")]),a._v("。")]),a._v(" "),t("p",[a._v("我们知道从 "),t("code",[a._v("Go 1.11")]),a._v(" 版本开始，官方支持了 "),t("code",[a._v("go module")]),a._v(" 包依赖管理工具。")]),a._v(" "),t("p",[a._v("其实还新增了 "),t("code",[a._v("GOPROXY")]),a._v(" 环境变量。如果设置了该变量，下载源代码时将会通过这个环境变量设置的代理地址，而不再是以前的直接从代码库下载。这无疑对我等无法科学上网的开发良民来说是最大的福音。")]),a._v(" "),t("p",[a._v("更可喜的是，"),t("a",{attrs:{href:"https://github.com/goproxyio/goproxy",target:"_blank",rel:"noopener noreferrer"}},[a._v("goproxy.io"),t("OutboundLink")],1),a._v(" 这个开源项目帮我们实现好了我们想要的。该项目允许开发者一键构建自己的 "),t("code",[a._v("GOPROXY")]),a._v(" 代理服务。同时，也提供了公用的代理服务 "),t("code",[a._v("https://goproxy.io")]),a._v("，我们只需设置该环境变量即可正常下载被墙的源码包了：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("export")]),a._v(" GOPROXY"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("https://goproxy.io\n")])])]),t("p",[a._v("不过，"),t("strong",[a._v("需要依赖于 go module 功能")]),a._v("。可通过 "),t("code",[a._v("export GO111MODULE=on")]),a._v(" 开启 MODULE。")]),a._v(" "),t("p",[a._v("如果项目不在 "),t("code",[a._v("GOPATH")]),a._v(" 中，则无法使用 "),t("code",[a._v("go get ...")]),a._v("，但可以使用 "),t("code",[a._v("go mod ...")]),a._v(" 相关命令。")]),a._v(" "),t("p",[a._v("也可以通过置空这个环境变量来关闭，"),t("code",[a._v("export GOPROXY=")]),a._v("。")]),a._v(" "),t("p",[a._v("对于 Windows 用户，可以在 "),t("code",[a._v("PowerShell")]),a._v(" 中设置：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$env")]),a._v(":GOPROXY "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://goproxy.io"')]),a._v("\n")])])])])},[],!1,null,null,null);o.default=r.exports}}]);